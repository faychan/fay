@model fay.Models.ViewModel.addOrderView
@{
    ViewBag.Title = "Add";
    Layout = "~/Views/_Base/_index.cshtml";
}
<h2>Add</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>addOrderView</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.id_outbond, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @using fay.Models.DB;
                @using fay;
                @using fay.Models.EntityManager;
                @using fay.Models.ViewModel;
                @{
                    List<Orderoutbond> orderoutbond = new List<Orderoutbond>();
                    using (DemoEntities1 db = new DemoEntities1())
                    {
                        foreach (outbond outbond in db.outbonds)
                        {
                            Orderoutbond om = new Orderoutbond();
                            
                                om.Text = outbond.id_outbond + " - " + outbond.keterangan;
                            
                            om.Value = outbond.id_outbond.ToString();
                            orderoutbond.Add(om);
                        }
                    }
                }
                @Html.DropDownListFor(model => model.id_outbond, new SelectList(orderoutbond, "Value", "Text"), "", new { @class = "form-control", @id = "outbondList" })
                @Html.ValidationMessageFor(model => model.id_outbond, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.id_pelanggan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<OrderUser> orderUser = new List<OrderUser>();
                    using (DemoEntities1 db = new DemoEntities1())
                    {
                        foreach (pelanggan p in db.pelanggans)
                        {
                            OrderUser ou = new OrderUser();
                            ou.Text = p.no_id + " - " + p.nama;
                            ou.Value = p.id_pelanggan.ToString();
                            orderUser.Add(ou);
                        }
                    }
                }
                @Html.DropDownListFor(model => model.id_pelanggan, new SelectList(orderUser, "Value", "Text"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_pelanggan, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.keterangan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.keterangan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.keterangan, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.tgl_akhir, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tgl_akhir, new { htmlAttributes = new { @type = "Date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tgl_akhir, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.tgl_mulai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tgl_mulai, new { htmlAttributes = new { @type = "Date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tgl_mulai, "", new { @type = "Date", @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.tgl_pesan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tgl_pesan, new { htmlAttributes = new { @type = "Date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tgl_pesan, "", new { @type = "Date", @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quantity, "", new { @type = "Date", @class = "text-danger" })
            </div>
        </div>
   <div class="form-group">
            @Html.LabelFor(model => model.harga, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.harga, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.harga, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.jumlah, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.jumlah, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.jumlah, "", new { @class = "text-danger" })
            </div>
        </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
                    }
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>

    var jsonOutput;
    var harga;
    var jumlahketerangan;
    $("#outbondList").change(function () {
        console.log($("#outbondList").val())
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetoutbondData","Order")",
            data: {
                id_outbond: $("#outbondList").val()
            },
            success: function (data) {
                jsonOutput = data;
                harga = jsonOutput.harga;
                jumlahketerangan = jsonOutput.keterangan;
                if (jumlahketerangan != 0) {
                    $("#orderharga").val(harga);
                    $("#orderQuantity").val(1);
                    amountCounter = 1;
                } else {
                    $("#orderharga").val(harga);
                    $("#orderQuantity").val(0);
                    amountCounter = 0;
                }
                var q = parseInt($("#orderQuantity").val());
                console.log(q);
                var t = harga * q;
                $("#orderTotal").val(t);
            },
            error: function (error) {
                console.log("Data Fetch Failed!");
            }

        });
    });

    var amountCounter = 0;
    $("span.quantityMin").click(function () {
        if ($("input.quantityData").val() != 0) {
            amountCounter -= 1;
            $("input.quantityData").val(amountCounter);
            var q = parseInt($("#orderQuantity").val());
            console.log(q);
            var t = harga * q;
            $("#orderTotal").val(t);
        }
    });
    $("span.quantityPlus").click(function () {
        var temp = amountCounter + 1;
        if (temp > jumlahketerangan) {
            console.log("Too Much!")
        } else {
            amountCounter += 1;
            $("input.quantityData").val(amountCounter);
            var q = parseInt($("#orderQuantity").val());
            console.log(q);
            var t = harga * q;
            $("#orderTotal").val(t);
        }
    });
</script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
